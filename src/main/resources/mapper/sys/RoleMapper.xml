<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeqifu.sys.mapper.RoleMapper">

    <!--查询角色-->
    <select id="queryAllRole" resultType="com.yeqifu.sys.domain.Role">
        select
        roleid, rolename, roledesc, available
        from sys_role
        <where>
            <if test="req.rolename!=null and req.rolename!=''">
                and rolename like concat("%",#{req.rolename},"%")
            </if>
            <if test="req.roledesc!=null and req.roledesc!=''">
                and roledesc like concat("%",#{req.roledesc},"%")
            </if>
            <if test="req.available!=null">
                and available=#{req.available}
            </if>
        </where>
    </select>

    <!--添加角色-->
    <insert id="addRole" parameterType="com.yeqifu.sys.req.AddOrUpdateRoleReq">
        INSERT INTO sys_role (rolename, roledesc, available)
        VALUES (#{req.loginname}, #{req.identity}, #{req.realname})
    </insert>

    <!--更新角色-->
    <update id="updateRole" parameterType="com.yeqifu.sys.req.AddOrUpdateRoleReq">
        UPDATE sys_role
        SET rolename = #{req.rolename},
            roledesc  = #{req.roledesc},
            available  = #{req.realname}
        WHERE roleid = #{req.roleid}
    </update>









    <resultMap id="BaseResultMap" type="com.yeqifu.sys.domain.Role">
        <id column="roleid" jdbcType="INTEGER" property="roleid"/>
        <result column="rolename" jdbcType="VARCHAR" property="rolename"/>
        <result column="roledesc" jdbcType="VARCHAR" property="roledesc"/>
        <result column="available" jdbcType="INTEGER" property="available"/>
    </resultMap>
    
    <sql id="Base_Column_List">
      roleid, rolename, roledesc, available
    </sql>
    
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where roleid = #{roleid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_role
        where roleid = #{roleid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.yeqifu.sys.domain.Role">
        insert into sys_role (roleid, rolename, roledesc,
          available)
        values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR},
          #{available,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yeqifu.sys.domain.Role">
        update sys_role
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
            <if test="roledesc != null">
                roledesc = #{roledesc,jdbcType=VARCHAR},
            </if>
            <if test="available != null">
                available = #{available,jdbcType=INTEGER},
            </if>
        </set>
        where roleid = #{roleid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yeqifu.sys.domain.Role">
        update sys_role
        set rolename = #{rolename,jdbcType=VARCHAR},
          roledesc = #{roledesc,jdbcType=VARCHAR},
          available = #{available,jdbcType=INTEGER}
        where roleid = #{roleid,jdbcType=INTEGER}
    </update>


    <!--根据角色id删除sys_role_menu里面的数据 deleteRoleMenuByRid-->
    <delete id="deleteRoleMenuByRid">
      delete from sys_role_menu where rid=#{value}
    </delete>

    <!--根据角色id删除sys_role_user里面的数据deleteRoleUserByRid-->
    <delete id="deleteRoleUserByRid">
      delete from sys_role_user where rid=#{value}
    </delete>

    <!--保存角色和菜单之间的关系-->
    <insert id="insertRoleMenu">
      insert into sys_role_menu(rid, mid) values(#{rid},#{mid})
    </insert>

    <!--根据用户id查询角色列表-->
    <select id="queryRoleByUid" resultMap="BaseResultMap">
      select t1.* from sys_role t1 inner join sys_role_user t2 on(t1.roleid=t2.rid) where t2.uid=#{uid}
    </select>

</mapper>